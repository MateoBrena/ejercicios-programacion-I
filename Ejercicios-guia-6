    /* 1. Hacer	un programa que	solicite 50	números	enteros	y
    los	guarde en un vector. Luego recorrer	el vector y	determinar e
    informar cuál es la suma de	los	valores	del	mismo.*/

    int numeros[50];
    int suma = 0;

    for(int i=0; i<50; i++){
        cout << "Ingrese un numero: ";
        cin >> numeros[i];

        suma += numeros[i];
    }

    cout << endl << "Suma total: " << suma << endl;


    /* 2. Hacer	un	programa que solicite 50 números enteros
    y los guarde en un	vector.	Luego recorrer los	elementos
    y determinar e informar cuál es el valor
    máximo y su posición dentro del vector.*/

    int numeros[50];
    int mayor;
    int posMayor;

    for(int i=0; i<50; i++){
        cout << "Ingrese un numero: ";
        cin >> numeros[i];

        if(i == 0){
            mayor = numeros[i];
            posMayor = i+1;
        }else{
            if(numeros[i] > mayor){
                mayor = numeros[i];
                posMayor = i+1;
            }
        }
    }
    cout << endl << "Numero mayor: " << mayor << ". En posicion: "<< posMayor << endl;


    /* 3. Hacer	 un	 programa que solicite 100 números enteros y
    los guarde en un vector. Luego	recorrer ese vector para calcular
    el promedio. Mostrar por pantalla los valores que son mayores al promedio.*/

    int numeros[100];
    int suma;
    int cantidad = 100;

    for(int i=0; i<100; i++){
        cout << "Ingrese un numero: ";
        cin >> numeros[i];

        suma += numeros[i];
    }

    float promedio = suma/(float)cantidad;
    cout << endl << "Promedio: " << promedio << endl;

    for(int j=0; j<100; j++){
        if(numeros[j] > promedio){
            cout << "Mayor al promedio: " << numeros[j] << endl;
        }
    }


    /* 4. Dada una lista de	50 números enteros, cargarlos en un	vector.
    Determinar e informar luego si el vector está ordenado en forma creciente.
    Por ejemplo: el	vector (1, 3, 5, 7, 9) está	ordenado, el vector	(1,	5, 3, 7) no	lo está.*/

    int numeros[50];
    int anterior;
    bool ordenado = true;

    for(int i=0; i<50; i++){
        cout << "Ingrese un numero: ";
        cin >> numeros[i];

        if(i > 0){
            anterior = numeros[i-1];
        }else{
            anterior = numeros[i];
        }

        if(anterior > numeros[i]){
            ordenado = false;
        }
    }

    if(ordenado){
        cout << endl << "El vector esta ordenado" << endl;
    }else{
        cout << endl << "El vector esta desordenado" << endl;
    }


    /* 5. Se ingresa una lista de 20 números en	un vector. Se pide ordenar
    dichos números en forma	decreciente (de	mayor a	menor).	Mostrar	el listado
    ordenado informando	también	la posición de cada número en el vector original.*/

    int numeros[20];
    bool intercambiados;

    for(int i=0; i<20; i++){
        cout << "Ingrese un numero: ";
        cin >> numeros[i];
    }

    for(int j=0; j<20-1; j++){
        intercambiados=false;
        for(int k=0; k<20-j-1; k++){
            if(numeros[k] < numeros[k+1]){
                swap(numeros[k],numeros[k+1]);
                intercambiados = true;
            }
        }
        if(!intercambiados){
            break;
        }
    }

    cout << "-----------Numeros ordenados-----------" << endl;

    for(int i=0; i<20; i++){
        cout << numeros[i] << endl;
    }


    /* 6. Hacer	un	programa que solicite una cadena de	caracteres
    y dos caracteres sueltos (tres ingresos). El programa deberá generar
    una	cadena donde todas las ocurrencias del primer carácter dado	hayan
    sido reemplazadas por el segundo. Mostrar el resultado en pantalla.*/

    string texto;
    char letra1, letra2;

    cout << "Ingrese un texto: ";
    getline(cin,texto);

    cout << "Ingrese una letra: ";
    cin >> letra1;

    cout << "Ingrese otra letra: ";
    cin >> letra2;

    for(int i=0; i<texto.length();i++){
        if(texto[i] == letra1){
            texto[i] = letra2;
        }
    }

    cout << endl << "Texto modificado: " << texto << endl;


    /* 7. Dada una cadena de caracteres, mostrar por
    pantalla cada uno de los caracteres que lo compone.*/

    string texto;

    cout << "Ingrese un texto: ";
    getline(cin,texto);

    for(int i=0; i<texto.length();i++){
        cout << texto[i] << endl;
    }


    /* 8. Dada una cadena de caracteres	y un carácter (dos	ingresos),
    mostrar	por	pantalla la	primera posición donde aparece ese carácter
    o un -1	si el carácter no se encuentra dentro de la	cadena.*/

    string texto;
    char carac;
    int posicion;
    bool coincidencia = false;

    cout << "Ingrese un texto: ";
    getline(cin,texto);

    cout << "Ingrese un caracter: ";
    cin >> carac;

    for(int i=0; i<texto.length();i++){
        if(texto[i] == carac){
            posicion = i+1;
            coincidencia = true;
            break;
        }
    }

    if(coincidencia){
        cout << endl <<"Coincidencia encontrada en posicion: " << posicion << endl;
    }else{
        cout << endl << "-1" << endl;
    }


    /* 9. Una empresa comercializa 15 tipos de artículos y por cada
    venta realizada genera un registro con los siguientes datos:
    - Número de	Artículo (1 a 15)
    - Cantidad Vendida
    Puede haber	varios registros para el mismo artículo	y el último se
    indica con número de artículo igual	a 0.
    Se pide	determinar e informar:
    a) El número de	artículo que más se	vendió en total.
    b) Los números de artículos	que	no registraron ventas.
    c) Cuantas unidades	se vendieron del número	de artículo	10 */
